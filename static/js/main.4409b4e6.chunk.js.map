{"version":3,"sources":["components/Users/styles/users.module.scss","components/FilterCheckbox/styles/filterCheckbox.module.scss","components/FilterInput/styles/filterInput.module.scss","reducers/reducer.js","actions/actionTypes.js","components/FilterInput/FilterInput.js","components/FilterCheckbox/FIlterCheckbox.js","components/Users/Users.js","containers/UsersContainer.js","actions/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","users","reducer","state","action","type","FilterInput","placeholder","onChange","value","className","s","filter","FilterCheckbox","label","checked","checkbox","Users","props","handleChangeName","event","setState","name","target","handleChangeLastname","lastname","handleChangeAge","age","handleChangeM","male","handleChangeF","female","this","getUsers","console","log","id","usersItem","arr","filterUsers","user","includes","sex","map","filterUser","showUsers","React","Component","mapDispatchToProps","dispatch","a","fetch","response","json","responseBody","UsersContainer","connect","App","Boolean","window","location","hostname","match","configureStore","createStore","applyMiddleware","thunk","store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4409b4e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__2S9Ld\",\"usersItem\":\"users_usersItem__2cuM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filterCheckbox_filter__ZYaCD\",\"checkbox\":\"filterCheckbox_checkbox__2vgrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filterInput_filter___Gkba\"};","import * as type from '../actions/actionTypes';\n\nexport const initialState = {\n  users: false,\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case type.ADD_USERS:\n      return { ...state, users: action.users };\n    default:\n      return state;\n  }\n};\n","export const ADD_USERS = 'ADD_USERS';\nexport const a = 'a';\n","import React from 'react';\n\n// styles\nimport s from './styles/filterInput.module.scss';\n\nexport const FilterInput = ({ type, placeholder, onChange, value}) => (\n  <input\n    className={s.filter}\n    type={type}\n    placeholder={placeholder}\n    onChange={onChange}\n    value={value}\n  />\n);\n\nexport default FilterInput;","import React from 'react';\n\n// styles\nimport s from './styles/filterCheckbox.module.scss';\n\nexport const FilterCheckbox = ({ label, type, onChange, checked}) => (\n    <label className={s.filter}>\n    {label}\n    <input \n      className={s.checkbox}\n      type={type} \n      onChange={onChange} \n      checked={checked}\n    />\n  </label>\n);\n\nexport default FilterCheckbox;","import React from 'react';\nimport { FilterInput } from '../FilterInput/FilterInput';\nimport { FilterCheckbox } from '../FilterCheckbox/FIlterCheckbox';\n\n// styles\nimport s from './styles/users.module.scss';\n\nexport class Users extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      lastname: '',\n      age: '',\n      male: false,\n      female: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers();\n  }\n\n  handleChangeName = event => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleChangeLastname = event => {\n    this.setState({ lastname: event.target.value });\n  }\n\n  handleChangeAge = event => {\n    this.setState({ age: event.target.value });\n  }\n\n  handleChangeM = event => {\n    if (!event.target.checked) {\n      this.setState({ male: event.target.checked, });\n    } else this.setState({ male: event.target.checked, });\n  }\n\n  handleChangeF = event => {\n    if (!event.target.checked) {\n      this.setState({ female: event.target.checked});\n    } else this.setState({ female: event.target.checked });\n  }\n\n  render() {\n    const { users } = this.props;\n    const { name, lastname, age, male, female} = this.state;\n    console.log(male);\n    const showUsers = (name, lastname, age, male, female, arr) => {\n      let filterUsers = arr;\n      if (name !== '' && arr) {\n        filterUsers = filterUsers.filter(user => user.name.includes(name));\n      } \n      if (lastname !== '' && arr) {\n          filterUsers = filterUsers.filter(user => user.lastname.includes(lastname));\n      }\n      if (age !== '' && arr) {\n        filterUsers = filterUsers.filter(user => user.age === +age);\n      }\n      if (male && arr) {\n        filterUsers = filterUsers.filter(user => user.sex === 'm');\n      }\n      if (female && arr) {\n        filterUsers = filterUsers.filter(user => user.sex === 'f');\n      }\n      return (filterUsers ? filterUsers.map(filterUser => (\n            <>\n              <div className={s.usersItem}>{filterUser.name}</div>\n              <div className={s.usersItem}>{filterUser.lastname}</div>\n              <div className={s.usersItem}>{filterUser.age}</div>\n              <div className={s.usersItem}>{filterUser.sex}</div>\n            </>\n          )) : null\n      );\n  }\n    return (\n      <div id={s.users}>\n        <div className={s.usersItem}>\n          <FilterInput\n            type=\"text\"\n            placeholder=\"имя\"\n            onChange={this.handleChangeName}\n            value={this.state.name}\n          />\n        </div>\n        <div className={s.usersItem}>\n          <FilterInput\n            type=\"text\"\n            placeholder=\"фамилия\"\n            onChange={this.handleChangeLastname}\n            value={this.state.lastname}\n          />\n        </div>\n        <div className={s.usersItem}>\n          <FilterInput\n            type=\"text\"\n            placeholder=\"возраст\"\n            onChange={this.handleChangeAge}\n            value={this.state.age}\n          />\n        </div>\n        <div className={s.usersItem}>\n          <FilterCheckbox\n            label=\"M\"\n            type=\"checkbox\" \n            onChange={this.handleChangeM} \n            checked={male}\n          />\n          <FilterCheckbox\n            label=\"Ж\"\n            type=\"checkbox\" \n            onChange={this.handleChangeF} \n            checked={female}\n          />\n        </div>\n        {showUsers(\n          name,\n          lastname,\n          age,\n          male,\n          female,\n          users,\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Users;\n","import { connect } from 'react-redux';\nimport { Users } from '../components/Users/Users';\nimport { getUsers } from '../actions/index';\n\nconst mapStateToProps = state => ({\n  users: state.users,\n});\nconst mapDispatchToProps = {\n  getUsers,\n};\nexport const UsersContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Users);\n\nexport default UsersContainer;\n","import * as type from './actionTypes';\n\nexport const addUsers = users => ({\n  type: type.ADD_USERS,\n  users,\n});\n\nconst url = 'https://venbest-test.herokuapp.com/';\n\nexport const getUsers = () => async dispatch => {\n  try {\n    const response = await fetch(url);\n    const responseBody = await response.json();\n    dispatch(addUsers(responseBody));\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import React from 'react';\nimport { UsersContainer } from './containers/UsersContainer';\nimport './styles/App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <div className=\"app-inner\">\n        <div className=\"content\">\n          <UsersContainer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer, initialState } from './reducers/reducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport function configureStore() {\n  const store = createStore(reducer, initialState, applyMiddleware(thunk));\n  return store;\n}\nexport const store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}